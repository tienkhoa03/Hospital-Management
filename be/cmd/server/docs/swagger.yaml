definitions:
  dto.ApiResponseSuccessStruct:
    properties:
      data:
        example: "null"
        type: string
      message:
        example: Success
        type: string
    type: object
  dto.AppointmentInfoRequest:
    properties:
      begin_time:
        type: string
      doctor_uid:
        type: integer
      finish_time:
        type: string
      patient_uid:
        type: integer
      status:
        default: scheduled
        type: string
    type: object
  dto.DoctorInfoRequest:
    properties:
      medical_license_number:
        type: string
      specialization:
        type: string
    required:
    - medical_license_number
    - specialization
    type: object
  dto.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  dto.LogoutRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  dto.ManagerInfoRequest:
    properties:
      department:
        type: string
      status:
        type: string
    required:
    - department
    type: object
  dto.NurseInfoRequest:
    properties:
      nursing_license_number:
        type: string
    required:
    - nursing_license_number
    type: object
  dto.PatientInfoRequest:
    properties:
      allergies:
        type: string
      blood_type:
        type: string
      chronic_conditions:
        type: string
      insurance_number:
        type: string
      status:
        type: string
    type: object
  dto.RefreshRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  dto.StaffInfoRequest:
    properties:
      department:
        type: string
      doctor_info:
        $ref: '#/definitions/dto.DoctorInfoRequest'
      nurse_info:
        $ref: '#/definitions/dto.NurseInfoRequest'
      role:
        type: string
      status:
        type: string
    required:
    - department
    - role
    type: object
  dto.TaskInfoRequest:
    properties:
      begin_time:
        type: string
      description:
        type: string
      finish_time:
        type: string
      status:
        default: scheduled
        type: string
      title:
        type: string
    type: object
  dto.UpdateAppointmentRequest:
    properties:
      begin_time:
        type: string
      doctor_uid:
        type: integer
      finish_time:
        type: string
      status:
        type: string
    type: object
  dto.UpdateCashingOfficerRequest:
    properties:
      department:
        type: string
      status:
        type: string
    type: object
  dto.UpdateDoctorRequest:
    properties:
      department:
        type: string
      medical_license_number:
        type: string
      specialization:
        type: string
      status:
        type: string
    type: object
  dto.UpdateManagerRequest:
    properties:
      department:
        type: string
      status:
        type: string
    type: object
  dto.UpdateNurseRequest:
    properties:
      department:
        type: string
      nursing_license_number:
        type: string
      status:
        type: string
    type: object
  dto.UpdatePatientRequest:
    properties:
      allergies:
        type: string
      blood_type:
        type: string
      chronic_conditions:
        type: string
      insurance_number:
        type: string
      status:
        type: string
    type: object
  dto.UpdateUserRequest:
    properties:
      address:
        type: string
      date_of_birth:
        type: string
      gender:
        type: string
      phone_number:
        type: string
      refresh_token:
        type: string
    type: object
  dto.UserInfoRequest:
    properties:
      address:
        type: string
      citizen_id:
        type: string
      date_of_birth:
        type: string
      email:
        type: string
      gender:
        type: string
      manager_info:
        $ref: '#/definitions/dto.ManagerInfoRequest'
      name:
        type: string
      password:
        type: string
      patient_info:
        $ref: '#/definitions/dto.PatientInfoRequest'
      phone_number:
        type: string
      role:
        type: string
      staff_info:
        $ref: '#/definitions/dto.StaffInfoRequest'
    required:
    - address
    - citizen_id
    - date_of_birth
    - email
    - gender
    - name
    - password
    - phone_number
    - role
    type: object
info:
  contact: {}
  description: Hospital Management API
  title: Hospital Management API
  version: "1.0"
paths:
  /api/appointments:
    post:
      consumes:
      - application/json
      description: Create an appointment
      parameters:
      - description: Appointment information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.AppointmentInfoRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Create an appointment
      tags:
      - Appointment
  /api/appointments/{id}:
    patch:
      consumes:
      - application/json
      description: Update appointment time
      parameters:
      - description: Appointment time
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateAppointmentRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Update appointment time
      tags:
      - Appointment
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: User's email and password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      summary: Login
      tags:
      - Auth
  /api/auth/logout:
    post:
      consumes:
      - application/json
      description: Logout
      parameters:
      - description: User's refresh token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LogoutRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      summary: Logout
      tags:
      - Auth
  /api/auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresh Access Token
      parameters:
      - description: User's refresh token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.RefreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      summary: Refresh Access Token
      tags:
      - Auth
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: Register new user
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UserInfoRequest'
      - description: Authorization
        in: header
        name: Authorization
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Register new user
      tags:
      - Auth
  /api/cashing-officer/{uid}:
    patch:
      consumes:
      - application/json
      description: Update cashing officer profile
      parameters:
      - description: New information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateCashingOfficerRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Update cashing officer profile
      tags:
      - User
  /api/doctors/{uid}:
    patch:
      consumes:
      - application/json
      description: Update doctor profile
      parameters:
      - description: New information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateDoctorRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Update doctor profile
      tags:
      - User
  /api/managers/{uid}:
    patch:
      consumes:
      - application/json
      description: Update manager profile
      parameters:
      - description: New information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateManagerRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Update manager profile
      tags:
      - User
  /api/nurses/{uid}:
    patch:
      consumes:
      - application/json
      description: Update nurse profile
      parameters:
      - description: New information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateNurseRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Update nurse profile
      tags:
      - User
  /api/patients/{uid}:
    patch:
      consumes:
      - application/json
      description: Update patient profile
      parameters:
      - description: New information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdatePatientRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Update patient profile
      tags:
      - User
  /api/staff-management/me/assigned-tasks:
    get:
      consumes:
      - application/json
      description: Get tasks assigned by current manager
      parameters:
      - description: User Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Get tasks assigned by current manager
      tags:
      - StaffManagement
  /api/staff-management/me/tasks:
    get:
      consumes:
      - application/json
      description: Get tasks for current staff
      parameters:
      - description: User Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Get tasks for current staff
      tags:
      - StaffManagement
  /api/staff-management/staffs/{uid}/tasks:
    get:
      consumes:
      - application/json
      description: Get tasks assigned by current manager to a specific staff
      parameters:
      - description: Staff UID
        in: path
        name: uid
        required: true
        type: integer
      - description: User Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Get tasks assigned by current manager to a specific staff
      tags:
      - StaffManagement
    post:
      consumes:
      - application/json
      description: Assign task to staff
      parameters:
      - description: Staff ID
        in: path
        name: uid
        required: true
        type: integer
      - description: Task information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.TaskInfoRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Assign task to staff
      tags:
      - StaffManagement
  /api/staff-management/tasks/{id}:
    delete:
      consumes:
      - application/json
      description: Delete task by Id
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      - description: User Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Delete task by Id
      tags:
      - StaffManagement
    get:
      consumes:
      - application/json
      description: Get task by Id
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      - description: User Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Get task by Id
      tags:
      - StaffManagement
  /api/users/managers/{uid}:
    delete:
      consumes:
      - application/json
      description: Delete manager by user ID
      parameters:
      - description: manager UID
        in: path
        name: id
        required: true
        type: integer
      - description: User Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Delete manager by user ID
      tags:
      - User
  /api/users/me:
    get:
      consumes:
      - application/json
      description: Get current user information
      parameters:
      - description: User Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Get current user information
      tags:
      - User
    patch:
      consumes:
      - application/json
      description: Update current user profile
      parameters:
      - description: New information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateUserRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Update current user profile
      tags:
      - User
  /api/users/me/cashing-officers:
    get:
      consumes:
      - application/json
      description: Get all cashing officers for current manager
      parameters:
      - description: User Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Get all cashing officers for current manager
      tags:
      - User
  /api/users/me/doctors:
    get:
      consumes:
      - application/json
      description: Get all doctors for current manager
      parameters:
      - description: User Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Get all doctors for current manager
      tags:
      - User
  /api/users/me/nurses:
    get:
      consumes:
      - application/json
      description: Get all nurses for current manager
      parameters:
      - description: User Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Get all nurses for current manager
      tags:
      - User
  /api/users/me/patients:
    get:
      consumes:
      - application/json
      description: Get all patients for current doctor
      parameters:
      - description: User Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Get all patients for current doctor
      tags:
      - User
  /api/users/me/patients/{uid}:
    get:
      consumes:
      - application/json
      description: Get patients by user ID for current doctor
      parameters:
      - description: Patient UID
        in: path
        name: id
        required: true
        type: integer
      - description: User Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Get patients by user ID for current doctor
      tags:
      - User
  /api/users/me/staffs:
    get:
      consumes:
      - application/json
      description: Get all staffs for current manager
      parameters:
      - description: User Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Get all staffs for current manager
      tags:
      - User
  /api/users/me/staffs/{uid}:
    delete:
      consumes:
      - application/json
      description: Delete staff by user ID for manager
      parameters:
      - description: staff UID
        in: path
        name: id
        required: true
        type: integer
      - description: User Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Delete staff by user ID for manager
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Get staff by user ID for current manager
      parameters:
      - description: Staff UID
        in: path
        name: id
        required: true
        type: integer
      - description: User Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Get staff by user ID for current manager
      tags:
      - User
schemes:
- http
- https
swagger: "2.0"
