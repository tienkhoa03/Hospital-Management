definitions:
  dto.ApiResponseSuccessStruct:
    properties:
      data:
        example: "null"
        type: string
      message:
        example: Success
        type: string
    type: object
  dto.AppointmentInfoRequest:
    properties:
      begin_time:
        type: string
      doctor_uid:
        type: integer
      finish_time:
        type: string
      patient_uid:
        type: integer
      status:
        default: scheduled
        type: string
    type: object
  dto.DoctorInfoRequest:
    properties:
      medical_license_number:
        type: string
      specialization:
        type: string
    required:
    - medical_license_number
    - specialization
    type: object
  dto.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  dto.LogoutRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  dto.ManagerInfoRequest:
    properties:
      department:
        type: string
      status:
        type: string
    required:
    - department
    type: object
  dto.NurseInfoRequest:
    properties:
      nursing_license_number:
        type: string
    required:
    - nursing_license_number
    type: object
  dto.PatientInfoRequest:
    properties:
      allergies:
        type: string
      blood_type:
        type: string
      chronic_conditions:
        type: string
      insurance_number:
        type: string
      status:
        type: string
    type: object
  dto.PrescriptionRequest:
    properties:
      amount:
        type: integer
      instruction:
        type: string
      medicine_id:
        type: integer
    type: object
  dto.RefreshRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  dto.StaffInfoRequest:
    properties:
      department:
        type: string
      doctor_info:
        $ref: '#/definitions/dto.DoctorInfoRequest'
      nurse_info:
        $ref: '#/definitions/dto.NurseInfoRequest'
      role:
        type: string
      status:
        type: string
    required:
    - department
    - role
    type: object
  dto.TaskInfoRequest:
    properties:
      begin_time:
        type: string
      description:
        type: string
      finish_time:
        type: string
      status:
        default: scheduled
        type: string
      title:
        type: string
    type: object
  dto.TreatmentPlanRequest:
    properties:
      appointment_id:
        type: integer
      diagnosis:
        type: string
      medical_services:
        type: string
      note:
        type: string
      patient_uid:
        type: integer
      prescriptions:
        items:
          $ref: '#/definitions/dto.PrescriptionRequest'
        type: array
      symptom:
        type: string
      treatment:
        type: string
    type: object
  dto.UpdateAppointmentRequest:
    properties:
      begin_time:
        type: string
      doctor_uid:
        type: integer
      finish_time:
        type: string
      status:
        type: string
    type: object
  dto.UpdateCashingOfficerRequest:
    properties:
      department:
        type: string
      status:
        type: string
    type: object
  dto.UpdateDoctorRequest:
    properties:
      department:
        type: string
      medical_license_number:
        type: string
      specialization:
        type: string
      status:
        type: string
    type: object
  dto.UpdateManagerRequest:
    properties:
      department:
        type: string
      status:
        type: string
    type: object
  dto.UpdateNurseRequest:
    properties:
      department:
        type: string
      nursing_license_number:
        type: string
      status:
        type: string
    type: object
  dto.UpdatePatientRequest:
    properties:
      allergies:
        type: string
      blood_type:
        type: string
      chronic_conditions:
        type: string
      insurance_number:
        type: string
      status:
        type: string
    type: object
  dto.UpdateTaskInfoRequest:
    properties:
      begin_time:
        type: string
      description:
        type: string
      finish_time:
        type: string
      staff_uid:
        type: integer
      status:
        default: scheduled
        type: string
      title:
        type: string
    type: object
  dto.UpdateUserRequest:
    properties:
      address:
        type: string
      date_of_birth:
        type: string
      gender:
        type: string
      phone_number:
        type: string
      refresh_token:
        type: string
    type: object
  dto.UserInfoRequest:
    properties:
      address:
        type: string
      citizen_id:
        type: string
      date_of_birth:
        type: string
      email:
        type: string
      gender:
        type: string
      manager_info:
        $ref: '#/definitions/dto.ManagerInfoRequest'
      name:
        type: string
      password:
        type: string
      patient_info:
        $ref: '#/definitions/dto.PatientInfoRequest'
      phone_number:
        type: string
      role:
        type: string
      staff_info:
        $ref: '#/definitions/dto.StaffInfoRequest'
    required:
    - address
    - citizen_id
    - date_of_birth
    - email
    - gender
    - name
    - password
    - phone_number
    - role
    type: object
info:
  contact: {}
  description: Hospital Management API
  title: Hospital Management API
  version: "1.0"
paths:
  /api/appointments:
    get:
      consumes:
      - application/json
      description: Get all appointments of current user
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Get all appointments of current user
      tags:
      - Appointment
    post:
      consumes:
      - application/json
      description: Create an appointment
      parameters:
      - description: Appointment information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.AppointmentInfoRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Create an appointment
      tags:
      - Appointment
  /api/appointments/{id}:
    get:
      consumes:
      - application/json
      description: Get appointment by id
      parameters:
      - description: Appointment id
        in: path
        name: id
        required: true
        type: integer
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Get appointment by id
      tags:
      - Appointment
    patch:
      consumes:
      - application/json
      description: Update appointment time
      parameters:
      - description: Appointment time
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateAppointmentRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Update appointment time
      tags:
      - Appointment
  /api/appointments/availability:
    get:
      consumes:
      - application/json
      description: Get available slots of doctor
      parameters:
      - description: Doctor ID
        in: query
        name: doctorUID
        required: true
        type: integer
      - description: 'Date (format: 2006-01-02)'
        in: query
        name: date
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Get available slots of doctor
      tags:
      - Appointment
  /api/appointments/availability/check:
    get:
      consumes:
      - application/json
      description: Get available slots of doctor
      parameters:
      - description: Doctor ID
        in: query
        name: doctorUID
        required: true
        type: integer
      - description: 'Begin Time (format: 2006-01-02 15:04)'
        in: query
        name: beginTime
        required: true
        type: string
      - description: 'Finish Time (format: 2006-01-02 15:04)'
        in: query
        name: finishTime
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Get available slots of doctor
      tags:
      - Appointment
  /api/appointments/filter:
    get:
      consumes:
      - application/json
      description: Get appointments of current user with filter
      parameters:
      - in: query
        name: limit
        type: integer
      - enum:
        - asc
        - desc
        in: query
        name: order
        type: string
      - in: query
        name: page
        type: integer
      - enum:
        - beginTime
        - createdAt
        in: query
        name: sortBy
        type: string
      - enum:
        - scheduled
        - completed
        - canceled
        in: query
        name: status
        type: string
      - in: query
        name: timeFrom
        type: string
      - in: query
        name: timeTo
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Get appointments of current user with filter
      tags:
      - Appointment
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: User's email and password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      summary: Login
      tags:
      - Auth
  /api/auth/logout:
    post:
      consumes:
      - application/json
      description: Logout
      parameters:
      - description: User's refresh token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LogoutRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      summary: Logout
      tags:
      - Auth
  /api/auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresh Access Token
      parameters:
      - description: User's refresh token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.RefreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      summary: Refresh Access Token
      tags:
      - Auth
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: Register new user
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UserInfoRequest'
      - description: Authorization
        in: header
        name: Authorization
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Register new user
      tags:
      - Auth
  /api/bills:
    get:
      consumes:
      - application/json
      description: Get all bills of current user (patient or cashing officer)
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Get all bills of current user
      tags:
      - Billing
  /api/bills/{id}:
    get:
      consumes:
      - application/json
      description: Get bill by id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Get bill by id
      tags:
      - Billing
  /api/bills/{id}/status:
    patch:
      consumes:
      - application/json
      description: Update the status of a bill to "paid" by a cashing officer
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Update bill status to paid
      tags:
      - Billing
  /api/bills/filter:
    get:
      consumes:
      - application/json
      description: Get bills of current user with filter
      parameters:
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - in: query
        name: limit
        type: integer
      - enum:
        - asc
        - desc
        in: query
        name: order
        type: string
      - in: query
        name: page
        type: integer
      - enum:
        - createdAt
        in: query
        name: sortBy
        type: string
      - enum:
        - paid
        - unpaid
        in: query
        name: status
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Get bills of current user with filter
      tags:
      - Billing
  /api/cashing-officer/{uid}:
    patch:
      consumes:
      - application/json
      description: Update cashing officer profile
      parameters:
      - description: New information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateCashingOfficerRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Update cashing officer profile
      tags:
      - User
  /api/doctors/{uid}:
    patch:
      consumes:
      - application/json
      description: Update doctor profile
      parameters:
      - description: New information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateDoctorRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Update doctor profile
      tags:
      - User
  /api/managers/{uid}:
    patch:
      consumes:
      - application/json
      description: Update manager profile
      parameters:
      - description: New information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateManagerRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Update manager profile
      tags:
      - User
  /api/nurses/{uid}:
    patch:
      consumes:
      - application/json
      description: Update nurse profile
      parameters:
      - description: New information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateNurseRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Update nurse profile
      tags:
      - User
  /api/patients/{uid}:
    patch:
      consumes:
      - application/json
      description: Update patient profile
      parameters:
      - description: New information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdatePatientRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Update patient profile
      tags:
      - User
  /api/patients/medical-records:
    get:
      consumes:
      - application/json
      description: Get all treatment plan of current user
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Get all treatment plan of current user
      tags:
      - PatientManagement
  /api/patients/medical-records/{id}:
    get:
      consumes:
      - application/json
      description: Get treatment plan by Id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Medical Record ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Get treatment plan by Id
      tags:
      - PatientManagement
  /api/patients/medical-records/filter:
    get:
      consumes:
      - application/json
      description: Get medical records of current user with filter
      parameters:
      - in: query
        name: createdAfter
        type: string
      - in: query
        name: createdBefore
        type: string
      - in: query
        name: limit
        type: integer
      - enum:
        - asc
        - desc
        in: query
        name: order
        type: string
      - in: query
        name: page
        type: integer
      - enum:
        - createdAt
        in: query
        name: sortBy
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Get medical records of current user with filter
      tags:
      - PatientManagement
  /api/staff-management/tasks/{id}:
    patch:
      consumes:
      - application/json
      description: Update task by Id
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated task information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateTaskInfoRequest'
      - description: User Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Update task by Id
      tags:
      - StaffManagement
  /api/staff_management/me/assigned-tasks:
    get:
      consumes:
      - application/json
      description: Get tasks assigned by current manager
      parameters:
      - description: User Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Get tasks assigned by current manager
      tags:
      - StaffManagement
  /api/staff_management/me/tasks:
    get:
      consumes:
      - application/json
      description: Get tasks for current staff
      parameters:
      - description: User Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Get tasks for current staff
      tags:
      - StaffManagement
  /api/staff_management/staffs/{uid}/tasks:
    get:
      consumes:
      - application/json
      description: Get tasks assigned by current manager to a specific staff
      parameters:
      - description: Staff UID
        in: path
        name: uid
        required: true
        type: integer
      - description: User Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Get tasks assigned by current manager to a specific staff
      tags:
      - StaffManagement
    post:
      consumes:
      - application/json
      description: Assign task to staff
      parameters:
      - description: Staff ID
        in: path
        name: uid
        required: true
        type: integer
      - description: Task information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.TaskInfoRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Assign task to staff
      tags:
      - StaffManagement
  /api/staff_management/tasks/{id}:
    get:
      consumes:
      - application/json
      description: Get task by Id
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      - description: User Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Get task by Id
      tags:
      - StaffManagement
  /api/treatment:
    post:
      consumes:
      - application/json
      description: Create a treatment plan
      parameters:
      - description: Treatment Plan
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.TreatmentPlanRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Create a treatment plan
      tags:
      - PatientManagement
  /api/users/me:
    get:
      consumes:
      - application/json
      description: Get current user information
      parameters:
      - description: User Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Get current user information
      tags:
      - User
    patch:
      consumes:
      - application/json
      description: Update current user profile
      parameters:
      - description: New information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateUserRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Update current user profile
      tags:
      - User
  /api/users/me/cashing-officers:
    get:
      consumes:
      - application/json
      description: Get all cashing officers for current manager
      parameters:
      - description: User Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Get all cashing officers for current manager
      tags:
      - User
  /api/users/me/doctors:
    get:
      consumes:
      - application/json
      description: Get all doctors for current manager
      parameters:
      - description: User Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Get all doctors for current manager
      tags:
      - User
  /api/users/me/nurses:
    get:
      consumes:
      - application/json
      description: Get all nurses for current manager
      parameters:
      - description: User Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Get all nurses for current manager
      tags:
      - User
  /api/users/me/patients:
    get:
      consumes:
      - application/json
      description: Get all patients for current doctor
      parameters:
      - description: User Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Get all patients for current doctor
      tags:
      - User
  /api/users/me/patients/{uid}:
    get:
      consumes:
      - application/json
      description: Get patients by user ID for current doctor
      parameters:
      - description: Patient UID
        in: path
        name: id
        required: true
        type: integer
      - description: User Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Get patients by user ID for current doctor
      tags:
      - User
  /api/users/me/staffs:
    get:
      consumes:
      - application/json
      description: Get all staffs for current manager
      parameters:
      - description: User Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Get all staffs for current manager
      tags:
      - User
  /api/users/me/staffs/{uid}:
    get:
      consumes:
      - application/json
      description: Get staff by user ID for current manager
      parameters:
      - description: Staff UID
        in: path
        name: id
        required: true
        type: integer
      - description: User Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApiResponseSuccessStruct'
      security:
      - JWT: []
      summary: Get staff by user ID for current manager
      tags:
      - User
schemes:
- http
- https
swagger: "2.0"
