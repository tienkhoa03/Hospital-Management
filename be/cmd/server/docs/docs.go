// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/auth/login": {
            "post": {
                "description": "Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "User's email and password",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseSuccessStruct"
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "description": "Logout",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Logout",
                "parameters": [
                    {
                        "description": "User's refresh token",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LogoutRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseSuccessStruct"
                        }
                    }
                }
            }
        },
        "/api/auth/refresh": {
            "post": {
                "description": "Refresh Access Token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh Access Token",
                "parameters": [
                    {
                        "description": "User's refresh token",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RefreshRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseSuccessStruct"
                        }
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Register new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Register new user",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserInfoRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseSuccessStruct"
                        }
                    }
                }
            }
        },
        "/api/cashing-officer/{uid}": {
            "patch": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Update cashing officer profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update cashing officer profile",
                "parameters": [
                    {
                        "description": "New information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateCashingOfficerRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseSuccessStruct"
                        }
                    }
                }
            }
        },
        "/api/doctors/{uid}": {
            "patch": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Update doctor profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update doctor profile",
                "parameters": [
                    {
                        "description": "New information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateDoctorRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseSuccessStruct"
                        }
                    }
                }
            }
        },
        "/api/managers/{uid}": {
            "patch": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Update manager profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update manager profile",
                "parameters": [
                    {
                        "description": "New information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateManagerRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseSuccessStruct"
                        }
                    }
                }
            }
        },
        "/api/nurses/{uid}": {
            "patch": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Update nurse profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update nurse profile",
                "parameters": [
                    {
                        "description": "New information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateNurseRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseSuccessStruct"
                        }
                    }
                }
            }
        },
        "/api/patients/{uid}": {
            "patch": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Update patient profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update patient profile",
                "parameters": [
                    {
                        "description": "New information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdatePatientRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseSuccessStruct"
                        }
                    }
                }
            }
        },
        "/api/users/managers/{uid}": {
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Delete manager by user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete manager by user ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "manager UID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseSuccessStruct"
                        }
                    }
                }
            }
        },
        "/api/users/me": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get current user information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get current user information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseSuccessStruct"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Update current user profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update current user profile",
                "parameters": [
                    {
                        "description": "New information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateUserRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseSuccessStruct"
                        }
                    }
                }
            }
        },
        "/api/users/me/cashing-officers": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get all cashing officers for current manager",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get all cashing officers for current manager",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseSuccessStruct"
                        }
                    }
                }
            }
        },
        "/api/users/me/doctors": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get all doctors for current manager",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get all doctors for current manager",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseSuccessStruct"
                        }
                    }
                }
            }
        },
        "/api/users/me/nurses": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get all nurses for current manager",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get all nurses for current manager",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseSuccessStruct"
                        }
                    }
                }
            }
        },
        "/api/users/me/patients": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get all patients for current doctor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get all patients for current doctor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseSuccessStruct"
                        }
                    }
                }
            }
        },
        "/api/users/me/patients/{uid}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get patients by user ID for current doctor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get patients by user ID for current doctor",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Patient UID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseSuccessStruct"
                        }
                    }
                }
            }
        },
        "/api/users/me/staffs": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get all staffs for current manager",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get all staffs for current manager",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseSuccessStruct"
                        }
                    }
                }
            }
        },
        "/api/users/me/staffs/{uid}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get staff by user ID for current manager",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get staff by user ID for current manager",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Staff UID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseSuccessStruct"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Delete staff by user ID for manager",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete staff by user ID for manager",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "staff UID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ApiResponseSuccessStruct"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.ApiResponseSuccessStruct": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string",
                    "example": "null"
                },
                "message": {
                    "type": "string",
                    "example": "Success"
                }
            }
        },
        "dto.DoctorInfoRequest": {
            "type": "object",
            "required": [
                "medical_license_number",
                "specialization"
            ],
            "properties": {
                "medical_license_number": {
                    "type": "string"
                },
                "specialization": {
                    "type": "string"
                }
            }
        },
        "dto.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.LogoutRequest": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "dto.ManagerInfoRequest": {
            "type": "object",
            "required": [
                "department"
            ],
            "properties": {
                "department": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dto.NurseInfoRequest": {
            "type": "object",
            "required": [
                "nursing_license_number"
            ],
            "properties": {
                "nursing_license_number": {
                    "type": "string"
                }
            }
        },
        "dto.PatientInfoRequest": {
            "type": "object",
            "properties": {
                "allergies": {
                    "type": "string"
                },
                "blood_type": {
                    "type": "string"
                },
                "chronic_conditions": {
                    "type": "string"
                },
                "insurance_number": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dto.RefreshRequest": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "dto.StaffInfoRequest": {
            "type": "object",
            "required": [
                "department",
                "role"
            ],
            "properties": {
                "department": {
                    "type": "string"
                },
                "doctor_info": {
                    "$ref": "#/definitions/dto.DoctorInfoRequest"
                },
                "nurse_info": {
                    "$ref": "#/definitions/dto.NurseInfoRequest"
                },
                "role": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateCashingOfficerRequest": {
            "type": "object",
            "properties": {
                "department": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateDoctorRequest": {
            "type": "object",
            "properties": {
                "department": {
                    "type": "string"
                },
                "medical_license_number": {
                    "type": "string"
                },
                "specialization": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateManagerRequest": {
            "type": "object",
            "properties": {
                "department": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateNurseRequest": {
            "type": "object",
            "properties": {
                "department": {
                    "type": "string"
                },
                "nursing_license_number": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dto.UpdatePatientRequest": {
            "type": "object",
            "properties": {
                "allergies": {
                    "type": "string"
                },
                "blood_type": {
                    "type": "string"
                },
                "chronic_conditions": {
                    "type": "string"
                },
                "insurance_number": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "dto.UserInfoRequest": {
            "type": "object",
            "required": [
                "address",
                "citizen_id",
                "date_of_birth",
                "email",
                "gender",
                "name",
                "password",
                "phone_number",
                "role"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "citizen_id": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "manager_info": {
                    "$ref": "#/definitions/dto.ManagerInfoRequest"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "patient_info": {
                    "$ref": "#/definitions/dto.PatientInfoRequest"
                },
                "phone_number": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "staff_info": {
                    "$ref": "#/definitions/dto.StaffInfoRequest"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{"http", "https"},
	Title:            "Hospital Management API",
	Description:      "Hospital Management API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
